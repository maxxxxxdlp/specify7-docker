FROM ubuntu:18.04

LABEL maintainer="Specify Collections Consortium <github.com/specify>"

# Get Ubuntu packages
RUN apt-get update && apt-get -y install \
	python-pip python-dev default-libmysqlclient-dev \
	apache2 libapache2-mod-python libapache2-mod-wsgi \
	libssl-dev libsasl2-dev libldap2-dev unzip curl \
	build-essential curl git aptitude python-lxml \
	mariadb-server wget software-properties-common
RUN aptitude install -y nodejs npm libmariadbclient-dev

# Get Amazon Corretto 8
RUN wget -O- https://apt.corretto.aws/corretto.key | apt-key add -
RUN add-apt-repository 'deb https://apt.corretto.aws stable main'
RUN apt-get install -y java-1.8.0-amazon-corretto-jdk

# Get Web Portal and Specify 7
RUN cd /usr/local/ \
	&& git clone https://github.com/specify/webportal-installer/ \
	&& git clone https://github.com/specify/specify7/

# Clean up
RUN apt-get clean && rm -rf /var/lib/apt/lists/*


### INSTALL AND CONFIGURE SPECIFY 7 ###

# copy the config directory for initial build, but it will be overwritten by the (optionally) mounted volume
COPY specify7_config /usr/local/specify_config

# RUN ls -l /usr/local/specify_config

# link specify7 config file from the mounted config volume
RUN ln -sf /usr/local/specify_config/local_specify_settings.py /usr/local/specify7/specifyweb/settings/

# create specify user that runs the web application
RUN useradd specify \
	&& mkdir /home/specify \
	&& chown -R specify.specify /home/specify \
	&& mkdir /usr/local/specify_wb_upload \
	&& chown -R specify:specify /usr/local/ \
  && mkdir /var/www/html/specify \
	&& mkdir /var/www/html/specify/specify_depository \
	&& chown -R specify:www-data /var/www/html/specify

# install virtual environment
RUN cd /usr/local/specify7/ \
	&& pip install virtualenv --no-cache-dir \
	&& virtualenv /usr/local/specify7/ve \
	&& bash -c "source /usr/local/specify7/ve/bin/activate"

# copy specify6 installation
COPY specify6_thick_client /usr/local/specify6

# as bower command can't be run as root by default, we'll have to set the global options
RUN echo '{ "allow_root": true }' > /root/.bowerrc

# set permissions and add the group www-data and specify to the docker group (necessary to avoid permission conflicts for the mounted Docker volumes)
RUN chown -R specify:specify /usr/local/specify7 \
	&& chown -R specify:www-data /usr/local/specify6 \
	&& groupadd -g 999 docker \
	&& usermod -aG docker www-data \
	&& usermod -aG docker specify

# build the web application
RUN	cd /usr/local/specify7/ && \
	su - root -c "cd /usr/local/specify7/ && make all"

# remove Specify 6 in order to keep the container smaller (it will be mounted via a docker volume)
RUN rm -rf /usr/local/specify6/*


############################
### APACHE CONFIGURATION ###
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP specify
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2

# link log files to stdout and stderr
RUN ln -sf /dev/stdout /var/log/apache2/access.log && \
    ln -sf /dev/stderr /var/log/apache2/error.log

# link apache config file and service script from the mounted config volume
RUN rm /etc/apache2/sites-enabled/000-default.conf  && \
	ln -sf /usr/local/specify_config/local_specifyweb_apache.conf /etc/apache2/sites-enabled/ && \
	mv /usr/local/specify_config/apache2-foreground /usr/local/bin/

RUN /usr/sbin/a2ensite default-ssl
RUN /usr/sbin/a2enmod ssl
RUN /usr/sbin/a2dismod python
RUN /usr/sbin/a2enmod wsgi
RUN /usr/sbin/a2enmod cgid

RUN  chmod +x /usr/local/bin/apache2-foreground

# avoid apache2 daemon start during boot
RUN update-rc.d -f apache2 remove

VOLUME [ "/usr/local/specify6" ]
VOLUME [ "/usr/local/specify_config" ]
VOLUME [ "/usr/local/specify_wb_upload" ]
VOLUME [ "/var/www/html/specify/specify_depository" ]

EXPOSE 80
EXPOSE 443

CMD ["/usr/local/bin/apache2-foreground", "-D", "FOREGROUND"]


### CONFIGURE MARIADB ###

# set root password
# delete anonymous users
# delete default database
# RUN mysql -u root << UPDATE mysql.user SET Password=PASSWORD('root') WHERE User='root'; \
# 	DELETE FROM mysql.user WHERE User=''; \
# 	DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'); \
# 	DROP DATABASE IF EXISTS test; \
# 	DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'; \
# 	FLUSH PRIVILEGES;

# RUN mysql -h 127.0.0.1 -P 3306 -u root -p root -e "SET PASSWORD FOR root@localhost = PASSWORD('root')";
# RUN mysql --user=root << DELETE FROM mysql.user WHERE User='';
# RUN mysql --user=root << DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
# RUN mysql --user=root << DROP DATABASE IF EXISTS test;
# RUN mysql --user=root << DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
# RUN mysql --user=root << FLUSH PRIVILEGES;

# # import the database


# ### INSTALL AND CONFIGURE WEB PORTAL ###

# # copy webportal export zip archive
# RUN cd /usr/local/webportal-installer \
# 	&& cp put_your_webportal_export_file_here/* specify_exports/

# # build solr
# RUN make clean && make